name: Create Plugin Zip

on:
  push:
    branches:
      - main

permissions:
  contents: write  # Ensure the token has write permissions for contents

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Create zip file
      run: |
        zip -r wordpress-copilot.zip . -x "*.git*" -x "*.github*"

    - name: Get latest release
      id: get_latest_release
      uses: actions/github-script@v6
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const releases = await github.rest.repos.listReleases({
            owner: context.repo.owner,
            repo: context.repo.repo
          });
          const latestRelease = releases.data[0];
          if (latestRelease) {
            const match = latestRelease.tag_name.match(/^v(\d+)$/);
            if (match) {
              return parseInt(match[1]);
            }
          }
          return 0;

    - name: Increment version
      id: increment_version
      run: echo "::set-output name=new_version::$((1 + ${{ steps.get_latest_release.outputs.result }}))"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.increment_version.outputs.new_version }}
        release_name: 'Release v${{ steps.increment_version.outputs.new_version }}'
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./wordpress-copilot.zip
        asset_name: wordpress-copilot.zip
        asset_content_type: application/zip